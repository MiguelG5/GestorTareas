{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TareaService {\n  constructor(http) {\n    this.http = http;\n    this.URL_API = 'http://localhost:4000/api/tareas';\n  }\n  getNombresDeTareas() {\n    return this.getTareas().pipe(map(tareas => [''].concat(tareas.map(tarea => tarea.datosCompartidos))));\n  }\n  getTareas() {\n    return this.http.get(this.URL_API).pipe(map(tareas => tareas.map(tarea => ({\n      ...tarea,\n      actividad: {\n        nombre: tarea.datosCompartidos,\n        duracion: tarea.tareaDatosEspecifico\n      } // Adaptación para Flyweight\n    }))));\n  }\n\n  createTarea(tarea) {\n    // Aquí puedes enviar solo los datos necesarios para crear la tarea en el servidor\n    const tareaParaCrear = {\n      datosCompartidos: tarea.datosCompartidos,\n      tareaDatosEspecifico: tarea.tareaDatosEspecifico,\n      fechaTerminacion: tarea.fechaTerminacion\n    };\n    return this.http.post(this.URL_API, tareaParaCrear);\n  }\n  putTarea(tarea) {\n    // Similar a createTarea, ajusta según sea necesario\n    return this.http.put(`${this.URL_API}/${tarea.idActividad}`, tarea);\n  }\n  deleteTarea(idActividad) {\n    return this.http.delete(`${this.URL_API}/${idActividad}`);\n  }\n  static #_ = this.ɵfac = function TareaService_Factory(t) {\n    return new (t || TareaService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TareaService,\n    factory: TareaService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["map","TareaService","constructor","http","URL_API","getNombresDeTareas","getTareas","pipe","tareas","concat","tarea","datosCompartidos","get","actividad","nombre","duracion","tareaDatosEspecifico","createTarea","tareaParaCrear","fechaTerminacion","post","putTarea","put","idActividad","deleteTarea","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\mikey\\Desktop\\Creador de tareas\\Front-End\\src\\app\\services\\tarea.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Tarea } from '../models/tareas';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TareaService {\n\n  URL_API = 'http://localhost:4000/api/tareas';\n\n  constructor(private http: HttpClient) { }\n\n  getNombresDeTareas(): Observable<string[]> {\n    return this.getTareas().pipe(\n      map(tareas => [''].concat(tareas.map(tarea => tarea.datosCompartidos)))\n    );\n  }\n\n  getTareas(): Observable<Tarea[]> {\n    return this.http.get<Tarea[]>(this.URL_API).pipe(\n      map(tareas => tareas.map(tarea => ({\n        ...tarea,\n        actividad: { nombre: tarea.datosCompartidos, duracion: tarea.tareaDatosEspecifico } // Adaptación para Flyweight\n      } as Tarea)))\n    );\n  }\n\n  createTarea(tarea: Tarea): Observable<any> {\n    // Aquí puedes enviar solo los datos necesarios para crear la tarea en el servidor\n    const tareaParaCrear = {\n      datosCompartidos: tarea.datosCompartidos,\n      tareaDatosEspecifico: tarea.tareaDatosEspecifico,\n      fechaTerminacion: tarea.fechaTerminacion\n    };\n\n    return this.http.post(this.URL_API, tareaParaCrear);\n  }\n\n  putTarea(tarea: Tarea): Observable<any> {\n    // Similar a createTarea, ajusta según sea necesario\n    return this.http.put(`${this.URL_API}/${tarea.idActividad}`, tarea);\n  }\n\n  deleteTarea(idActividad: number): Observable<any> {\n    return this.http.delete(`${this.URL_API}/${idActividad}`);\n  }\n}\n"],"mappings":"AAIA,SAASA,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAG,kCAAkC;EAEJ;EAExCC,kBAAkBA,CAAA;IAChB,OAAO,IAAI,CAACC,SAAS,EAAE,CAACC,IAAI,CAC1BP,GAAG,CAACQ,MAAM,IAAI,CAAC,EAAE,CAAC,CAACC,MAAM,CAACD,MAAM,CAACR,GAAG,CAACU,KAAK,IAAIA,KAAK,CAACC,gBAAgB,CAAC,CAAC,CAAC,CACxE;EACH;EAEAL,SAASA,CAAA;IACP,OAAO,IAAI,CAACH,IAAI,CAACS,GAAG,CAAU,IAAI,CAACR,OAAO,CAAC,CAACG,IAAI,CAC9CP,GAAG,CAACQ,MAAM,IAAIA,MAAM,CAACR,GAAG,CAACU,KAAK,KAAK;MACjC,GAAGA,KAAK;MACRG,SAAS,EAAE;QAAEC,MAAM,EAAEJ,KAAK,CAACC,gBAAgB;QAAEI,QAAQ,EAAEL,KAAK,CAACM;MAAoB,CAAE,CAAC;KAC3E,EAAC,CAAC,CACd;EACH;;EAEAC,WAAWA,CAACP,KAAY;IACtB;IACA,MAAMQ,cAAc,GAAG;MACrBP,gBAAgB,EAAED,KAAK,CAACC,gBAAgB;MACxCK,oBAAoB,EAAEN,KAAK,CAACM,oBAAoB;MAChDG,gBAAgB,EAAET,KAAK,CAACS;KACzB;IAED,OAAO,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAC,IAAI,CAAChB,OAAO,EAAEc,cAAc,CAAC;EACrD;EAEAG,QAAQA,CAACX,KAAY;IACnB;IACA,OAAO,IAAI,CAACP,IAAI,CAACmB,GAAG,CAAC,GAAG,IAAI,CAAClB,OAAO,IAAIM,KAAK,CAACa,WAAW,EAAE,EAAEb,KAAK,CAAC;EACrE;EAEAc,WAAWA,CAACD,WAAmB;IAC7B,OAAO,IAAI,CAACpB,IAAI,CAACsB,MAAM,CAAC,GAAG,IAAI,CAACrB,OAAO,IAAImB,WAAW,EAAE,CAAC;EAC3D;EAAC,QAAAG,CAAA,G;qBAvCUzB,YAAY,EAAA0B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAZ9B,YAAY;IAAA+B,OAAA,EAAZ/B,YAAY,CAAAgC,IAAA;IAAAC,UAAA,EAFX;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}